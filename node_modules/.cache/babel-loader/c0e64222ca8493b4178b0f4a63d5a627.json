{"ast":null,"code":"// src/index.jsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nvar getScrollParent = node => {\n  let parent = node;\n\n  while (parent = parent.parentElement) {\n    const overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n\n  return window;\n};\n\nvar offsetTill = (node, target) => {\n  let current = node;\n  let offset = 0;\n\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n\n  return offset;\n};\n\nvar getParentNode = node => {\n  let currentParent = node.parentNode;\n\n  while (currentParent) {\n    const style = getComputedStyle(currentParent, null);\n    if (style.getPropertyValue(\"display\") !== \"contents\") break;\n    currentParent = currentParent.parentNode;\n  }\n\n  return currentParent || window;\n};\n\nvar stickyProp = null;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n}\n\nvar passiveArg = false;\n\ntry {\n  opts = Object.defineProperty({}, \"passive\", {\n    get() {\n      passiveArg = {\n        passive: true\n      };\n    }\n\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nvar opts;\n\nvar registerNode = (node, _ref) => {\n  let {\n    offsetTop,\n    offsetBottom,\n    bottom\n  } = _ref;\n  const scrollPane = getScrollParent(node);\n  let latestScrollY = scrollPane === window ? window.scrollY : scrollPane.scrollTop;\n  const unsubs = [];\n  let mode, offset, nodeHeight, naturalTop, parentHeight, scrollPaneOffset, viewPortHeight;\n\n  const getCurrentOffset = () => {\n    if (mode === \"relative\") return offset;\n\n    if (mode === \"stickyTop\") {\n      return Math.max(0, scrollPaneOffset + latestScrollY - naturalTop + offsetTop);\n    }\n\n    if (mode === \"stickyBottom\") {\n      return Math.max(0, scrollPaneOffset + latestScrollY + viewPortHeight - (naturalTop + nodeHeight + offsetBottom));\n    }\n  };\n\n  const changeToStickyBottomIfBoxTooLow = scrollY => {\n    if (scrollY + scrollPaneOffset + viewPortHeight >= naturalTop + nodeHeight + offset + offsetBottom) {\n      changeMode(\"stickyBottom\");\n    }\n  };\n\n  const changeMode = newMode => {\n    mode = newMode;\n\n    if (newMode === \"relative\") {\n      node.style.position = \"relative\";\n\n      if (bottom) {\n        const nextBottom = Math.max(0, parentHeight - nodeHeight - offset);\n        node.style.bottom = `${nextBottom}px`;\n      } else {\n        node.style.top = `${offset}px`;\n      }\n    } else {\n      node.style.position = stickyProp;\n\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          node.style.bottom = `${offsetBottom}px`;\n        } else {\n          node.style.top = `${viewPortHeight - nodeHeight - offsetBottom}px`;\n        }\n      } else {\n        if (bottom) {\n          node.style.bottom = `${viewPortHeight - nodeHeight - offsetBottom}px`;\n        } else {\n          node.style.top = `${offsetTop}px`;\n        }\n      }\n    }\n\n    offset = getCurrentOffset();\n  };\n\n  const initial = () => {\n    if (bottom) {\n      if (mode !== \"stickyBottom\") changeMode(\"stickyBottom\");\n    } else {\n      if (mode !== \"stickyTop\") changeMode(\"stickyTop\");\n    }\n  };\n\n  const addListener = (element, event, handler, passive) => {\n    element.addEventListener(event, handler, passive);\n    unsubs.push(() => element.removeEventListener(event, handler));\n  };\n\n  const handleScroll = () => {\n    const scrollY = scrollPane === window ? window.scrollY : scrollPane.scrollTop;\n    if (scrollY === latestScrollY) return;\n\n    if (nodeHeight + offsetTop + offsetBottom <= viewPortHeight) {\n      initial();\n      latestScrollY = scrollY;\n      return;\n    }\n\n    const scrollDelta = scrollY - latestScrollY;\n    offset = getCurrentOffset();\n\n    if (scrollDelta > 0) {\n      if (mode === \"stickyTop\") {\n        if (scrollY + scrollPaneOffset + offsetTop > naturalTop) {\n          if (scrollY + scrollPaneOffset + viewPortHeight <= naturalTop + nodeHeight + offset + offsetBottom) {\n            changeMode(\"relative\");\n          } else {\n            changeMode(\"stickyBottom\");\n          }\n        }\n      } else if (mode === \"relative\") {\n        changeToStickyBottomIfBoxTooLow(scrollY);\n      }\n    } else {\n      if (mode === \"stickyBottom\") {\n        if (scrollPaneOffset + scrollY + viewPortHeight < naturalTop + parentHeight + offsetBottom) {\n          if (scrollPaneOffset + scrollY + offsetTop >= naturalTop + offset) {\n            changeMode(\"relative\");\n          } else {\n            changeMode(\"stickyTop\");\n          }\n        }\n      } else if (mode === \"relative\") {\n        if (scrollPaneOffset + scrollY + offsetTop < naturalTop + offset) {\n          changeMode(\"stickyTop\");\n        }\n      }\n    }\n\n    latestScrollY = scrollY;\n  };\n\n  const handleWindowResize = () => {\n    viewPortHeight = window.innerHeight;\n    scrollPaneOffset = 0;\n    handleScroll();\n  };\n\n  const handleScrollPaneResize = () => {\n    viewPortHeight = scrollPane.offsetHeight;\n\n    if (viewPortHeight === 0) {\n      console.warn(`react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:`, scrollPane);\n    }\n\n    if (scrollPane.firstChild.offsetParent === scrollPane) {\n      scrollPaneOffset = scrollPane.getBoundingClientRect().top;\n    } else {\n      scrollPaneOffset = 0;\n    }\n\n    handleScroll();\n  };\n\n  const handleParentNodeResize = () => {\n    const parentNode = getParentNode(node);\n    const computedParentStyle = getComputedStyle(parentNode, null);\n    const parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n    const parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n    const verticalParentPadding = parentPaddingTop + parentPaddingBottom;\n    naturalTop = offsetTill(parentNode, scrollPane) + parentPaddingTop + scrollPaneOffset;\n    const oldParentHeight = parentHeight;\n    parentHeight = parentNode.getBoundingClientRect().height - verticalParentPadding;\n\n    if (mode === \"relative\") {\n      if (bottom) {\n        changeMode(\"relative\");\n      } else {\n        if (oldParentHeight > parentHeight) {\n          changeToStickyBottomIfBoxTooLow(latestScrollY);\n        }\n      }\n    }\n\n    if (oldParentHeight !== parentHeight && mode === \"relative\") {\n      latestScrollY = Number.POSITIVE_INFINITY;\n      handleScroll();\n    }\n  };\n\n  const handleNodeResize = function () {\n    let {\n      initial: initialArg\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const prevHeight = nodeHeight;\n    nodeHeight = node.getBoundingClientRect().height;\n\n    if (!initialArg && prevHeight !== nodeHeight) {\n      if (nodeHeight + offsetTop + offsetBottom <= viewPortHeight) {\n        mode = void 0;\n        initial();\n        return;\n      } else {\n        const diff = prevHeight - nodeHeight;\n        const lowestPossible = parentHeight - nodeHeight;\n        const nextOffset = Math.min(lowestPossible, getCurrentOffset() + (bottom ? diff : 0));\n        offset = Math.max(0, nextOffset);\n        if (!bottom || mode !== \"stickyBottom\") changeMode(\"relative\");\n      }\n    }\n  };\n\n  const addResizeObserver = (n, handler) => {\n    const ro = new ResizeObserver(handler);\n    ro.observe(n);\n    unsubs.push(() => ro.disconnect());\n  };\n\n  addListener(scrollPane, \"scroll\", handleScroll, passiveArg);\n  addListener(scrollPane, \"mousewheel\", handleScroll, passiveArg);\n\n  if (scrollPane === window) {\n    addListener(window, \"resize\", handleWindowResize);\n    handleWindowResize();\n  } else {\n    addResizeObserver(scrollPane, handleScrollPaneResize);\n    handleScrollPaneResize();\n  }\n\n  addResizeObserver(getParentNode(node), handleParentNodeResize);\n  handleParentNodeResize();\n  addResizeObserver(node, handleNodeResize);\n  handleNodeResize({\n    initial: true\n  });\n  initial();\n  return () => unsubs.forEach(fn => fn());\n};\n\nvar useStickyBox = function () {\n  let {\n    offsetTop = 0,\n    offsetBottom = 0,\n    bottom = false\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [node, setNode] = useState(null);\n  const argRef = useRef({\n    offsetTop,\n    offsetBottom,\n    bottom\n  });\n  useEffect(() => {\n    argRef.current = {\n      offsetTop,\n      offsetBottom,\n      bottom\n    };\n  });\n  useEffect(() => {\n    if (!node) return;\n    return registerNode(node, argRef.current);\n  }, [node]);\n  return setNode;\n};\n\nvar StickyBox = _ref2 => {\n  let {\n    offsetTop,\n    offsetBottom,\n    bottom,\n    children,\n    className,\n    style\n  } = _ref2;\n  const ref = useStickyBox({\n    offsetTop,\n    offsetBottom,\n    bottom\n  });\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className,\n    style,\n    ref\n  }, children);\n};\n\nvar src_default = StickyBox;\nexport { src_default as default, useStickyBox };","map":{"version":3,"names":["React","useEffect","useRef","useState","ResizeObserver","getScrollParent","node","parent","parentElement","overflowYVal","getComputedStyle","getPropertyValue","document","body","window","offsetTill","target","current","offset","firstChild","offsetParent","offsetTop","getParentNode","currentParent","parentNode","style","stickyProp","CSS","supports","passiveArg","opts","Object","defineProperty","get","passive","addEventListener","removeEventListener","e","registerNode","offsetBottom","bottom","scrollPane","latestScrollY","scrollY","scrollTop","unsubs","mode","nodeHeight","naturalTop","parentHeight","scrollPaneOffset","viewPortHeight","getCurrentOffset","Math","max","changeToStickyBottomIfBoxTooLow","changeMode","newMode","position","nextBottom","top","initial","addListener","element","event","handler","push","handleScroll","scrollDelta","handleWindowResize","innerHeight","handleScrollPaneResize","offsetHeight","console","warn","getBoundingClientRect","handleParentNodeResize","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","verticalParentPadding","oldParentHeight","height","Number","POSITIVE_INFINITY","handleNodeResize","initialArg","prevHeight","diff","lowestPossible","nextOffset","min","addResizeObserver","n","ro","observe","disconnect","forEach","fn","useStickyBox","setNode","argRef","StickyBox","children","className","ref","createElement","src_default","default"],"sources":["/home/asishk/GraphQL/TwitterFeed/CloneTwitter/node_modules/react-sticky-box/dist/index.js"],"sourcesContent":["// src/index.jsx\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nvar getScrollParent = (node) => {\n  let parent = node;\n  while (parent = parent.parentElement) {\n    const overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body)\n      return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\")\n      return parent;\n  }\n  return window;\n};\nvar offsetTill = (node, target) => {\n  let current = node;\n  let offset = 0;\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n  return offset;\n};\nvar getParentNode = (node) => {\n  let currentParent = node.parentNode;\n  while (currentParent) {\n    const style = getComputedStyle(currentParent, null);\n    if (style.getPropertyValue(\"display\") !== \"contents\")\n      break;\n    currentParent = currentParent.parentNode;\n  }\n  return currentParent || window;\n};\nvar stickyProp = null;\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\"))\n    stickyProp = \"sticky\";\n  else if (CSS.supports(\"position\", \"-webkit-sticky\"))\n    stickyProp = \"-webkit-sticky\";\n}\nvar passiveArg = false;\ntry {\n  opts = Object.defineProperty({}, \"passive\", {\n    get() {\n      passiveArg = { passive: true };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {\n}\nvar opts;\nvar registerNode = (node, { offsetTop, offsetBottom, bottom }) => {\n  const scrollPane = getScrollParent(node);\n  let latestScrollY = scrollPane === window ? window.scrollY : scrollPane.scrollTop;\n  const unsubs = [];\n  let mode, offset, nodeHeight, naturalTop, parentHeight, scrollPaneOffset, viewPortHeight;\n  const getCurrentOffset = () => {\n    if (mode === \"relative\")\n      return offset;\n    if (mode === \"stickyTop\") {\n      return Math.max(0, scrollPaneOffset + latestScrollY - naturalTop + offsetTop);\n    }\n    if (mode === \"stickyBottom\") {\n      return Math.max(0, scrollPaneOffset + latestScrollY + viewPortHeight - (naturalTop + nodeHeight + offsetBottom));\n    }\n  };\n  const changeToStickyBottomIfBoxTooLow = (scrollY) => {\n    if (scrollY + scrollPaneOffset + viewPortHeight >= naturalTop + nodeHeight + offset + offsetBottom) {\n      changeMode(\"stickyBottom\");\n    }\n  };\n  const changeMode = (newMode) => {\n    mode = newMode;\n    if (newMode === \"relative\") {\n      node.style.position = \"relative\";\n      if (bottom) {\n        const nextBottom = Math.max(0, parentHeight - nodeHeight - offset);\n        node.style.bottom = `${nextBottom}px`;\n      } else {\n        node.style.top = `${offset}px`;\n      }\n    } else {\n      node.style.position = stickyProp;\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          node.style.bottom = `${offsetBottom}px`;\n        } else {\n          node.style.top = `${viewPortHeight - nodeHeight - offsetBottom}px`;\n        }\n      } else {\n        if (bottom) {\n          node.style.bottom = `${viewPortHeight - nodeHeight - offsetBottom}px`;\n        } else {\n          node.style.top = `${offsetTop}px`;\n        }\n      }\n    }\n    offset = getCurrentOffset();\n  };\n  const initial = () => {\n    if (bottom) {\n      if (mode !== \"stickyBottom\")\n        changeMode(\"stickyBottom\");\n    } else {\n      if (mode !== \"stickyTop\")\n        changeMode(\"stickyTop\");\n    }\n  };\n  const addListener = (element, event, handler, passive) => {\n    element.addEventListener(event, handler, passive);\n    unsubs.push(() => element.removeEventListener(event, handler));\n  };\n  const handleScroll = () => {\n    const scrollY = scrollPane === window ? window.scrollY : scrollPane.scrollTop;\n    if (scrollY === latestScrollY)\n      return;\n    if (nodeHeight + offsetTop + offsetBottom <= viewPortHeight) {\n      initial();\n      latestScrollY = scrollY;\n      return;\n    }\n    const scrollDelta = scrollY - latestScrollY;\n    offset = getCurrentOffset();\n    if (scrollDelta > 0) {\n      if (mode === \"stickyTop\") {\n        if (scrollY + scrollPaneOffset + offsetTop > naturalTop) {\n          if (scrollY + scrollPaneOffset + viewPortHeight <= naturalTop + nodeHeight + offset + offsetBottom) {\n            changeMode(\"relative\");\n          } else {\n            changeMode(\"stickyBottom\");\n          }\n        }\n      } else if (mode === \"relative\") {\n        changeToStickyBottomIfBoxTooLow(scrollY);\n      }\n    } else {\n      if (mode === \"stickyBottom\") {\n        if (scrollPaneOffset + scrollY + viewPortHeight < naturalTop + parentHeight + offsetBottom) {\n          if (scrollPaneOffset + scrollY + offsetTop >= naturalTop + offset) {\n            changeMode(\"relative\");\n          } else {\n            changeMode(\"stickyTop\");\n          }\n        }\n      } else if (mode === \"relative\") {\n        if (scrollPaneOffset + scrollY + offsetTop < naturalTop + offset) {\n          changeMode(\"stickyTop\");\n        }\n      }\n    }\n    latestScrollY = scrollY;\n  };\n  const handleWindowResize = () => {\n    viewPortHeight = window.innerHeight;\n    scrollPaneOffset = 0;\n    handleScroll();\n  };\n  const handleScrollPaneResize = () => {\n    viewPortHeight = scrollPane.offsetHeight;\n    if (viewPortHeight === 0) {\n      console.warn(`react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:`, scrollPane);\n    }\n    if (scrollPane.firstChild.offsetParent === scrollPane) {\n      scrollPaneOffset = scrollPane.getBoundingClientRect().top;\n    } else {\n      scrollPaneOffset = 0;\n    }\n    handleScroll();\n  };\n  const handleParentNodeResize = () => {\n    const parentNode = getParentNode(node);\n    const computedParentStyle = getComputedStyle(parentNode, null);\n    const parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n    const parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n    const verticalParentPadding = parentPaddingTop + parentPaddingBottom;\n    naturalTop = offsetTill(parentNode, scrollPane) + parentPaddingTop + scrollPaneOffset;\n    const oldParentHeight = parentHeight;\n    parentHeight = parentNode.getBoundingClientRect().height - verticalParentPadding;\n    if (mode === \"relative\") {\n      if (bottom) {\n        changeMode(\"relative\");\n      } else {\n        if (oldParentHeight > parentHeight) {\n          changeToStickyBottomIfBoxTooLow(latestScrollY);\n        }\n      }\n    }\n    if (oldParentHeight !== parentHeight && mode === \"relative\") {\n      latestScrollY = Number.POSITIVE_INFINITY;\n      handleScroll();\n    }\n  };\n  const handleNodeResize = ({ initial: initialArg } = {}) => {\n    const prevHeight = nodeHeight;\n    nodeHeight = node.getBoundingClientRect().height;\n    if (!initialArg && prevHeight !== nodeHeight) {\n      if (nodeHeight + offsetTop + offsetBottom <= viewPortHeight) {\n        mode = void 0;\n        initial();\n        return;\n      } else {\n        const diff = prevHeight - nodeHeight;\n        const lowestPossible = parentHeight - nodeHeight;\n        const nextOffset = Math.min(lowestPossible, getCurrentOffset() + (bottom ? diff : 0));\n        offset = Math.max(0, nextOffset);\n        if (!bottom || mode !== \"stickyBottom\")\n          changeMode(\"relative\");\n      }\n    }\n  };\n  const addResizeObserver = (n, handler) => {\n    const ro = new ResizeObserver(handler);\n    ro.observe(n);\n    unsubs.push(() => ro.disconnect());\n  };\n  addListener(scrollPane, \"scroll\", handleScroll, passiveArg);\n  addListener(scrollPane, \"mousewheel\", handleScroll, passiveArg);\n  if (scrollPane === window) {\n    addListener(window, \"resize\", handleWindowResize);\n    handleWindowResize();\n  } else {\n    addResizeObserver(scrollPane, handleScrollPaneResize);\n    handleScrollPaneResize();\n  }\n  addResizeObserver(getParentNode(node), handleParentNodeResize);\n  handleParentNodeResize();\n  addResizeObserver(node, handleNodeResize);\n  handleNodeResize({ initial: true });\n  initial();\n  return () => unsubs.forEach((fn) => fn());\n};\nvar useStickyBox = ({ offsetTop = 0, offsetBottom = 0, bottom = false } = {}) => {\n  const [node, setNode] = useState(null);\n  const argRef = useRef({ offsetTop, offsetBottom, bottom });\n  useEffect(() => {\n    argRef.current = { offsetTop, offsetBottom, bottom };\n  });\n  useEffect(() => {\n    if (!node)\n      return;\n    return registerNode(node, argRef.current);\n  }, [node]);\n  return setNode;\n};\nvar StickyBox = ({ offsetTop, offsetBottom, bottom, children, className, style }) => {\n  const ref = useStickyBox({ offsetTop, offsetBottom, bottom });\n  return /* @__PURE__ */ React.createElement(\"div\", {\n    className,\n    style,\n    ref\n  }, children);\n};\nvar src_default = StickyBox;\nexport {\n  src_default as default,\n  useStickyBox\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}